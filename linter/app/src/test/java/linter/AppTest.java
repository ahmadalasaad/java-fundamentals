/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void testInReturnErrorEmptyErrorFile() {
        Path path = Paths.get("C:\\Users\\Willson\\401\\java-fundamentals\\linter\\app\\src\\test\\resources\\noError.js");
        App classUnderTest = new App();
        ArrayList<String> emptyArray = new ArrayList<String>();
        ArrayList actualResult = classUnderTest.returnError(path);
assertLinesMatch(emptyArray,actualResult);
    }
    @Test void testInReturnErrorOneErrorFile() {
        Path path = Paths.get("C:\\Users\\Willson\\401\\java-fundamentals\\linter\\app\\src\\test\\resources\\oneError.js");
        App classUnderTest = new App();
        ArrayList<String> oneErrorArray = new ArrayList<String>();
        oneErrorArray.add("Line"+(5)+": Missing semicolon.");
        ArrayList actualResult = classUnderTest.returnError(path);
        assertLinesMatch(oneErrorArray,actualResult);
    }
    @Test void testInReturnErrorFewErrorFile() {
        Path path = Paths.get("C:\\Users\\Willson\\401\\java-fundamentals\\linter\\app\\src\\test\\resources\\fewError.js");
        App classUnderTest1 = new App();
        ArrayList<String> fewErrorArray = new ArrayList<String>();
        fewErrorArray.add("Line"+(3)+": Missing semicolon.");
        fewErrorArray.add("Line"+(5)+": Missing semicolon.");
        fewErrorArray.add("Line"+(7)+": Missing semicolon.");

        ArrayList actualResult = classUnderTest1.returnError(path);
        assertLinesMatch(fewErrorArray,actualResult);
    }
    @Test void testInReturnErrorManyErrorFile() {
        Path path = Paths.get("C:\\Users\\Willson\\401\\java-fundamentals\\linter\\app\\src\\test\\resources\\manyError.js");
        App classUnderTest1 = new App();
        ArrayList<String> manyErrorArray = new ArrayList<String>();
        manyErrorArray.add("Line"+(3)+": Missing semicolon.");
        manyErrorArray.add("Line"+(5)+": Missing semicolon.");
        manyErrorArray.add("Line"+(7)+": Missing semicolon.");
        manyErrorArray.add("Line"+(11)+": Missing semicolon.");
        manyErrorArray.add("Line"+(13)+": Missing semicolon.");
        manyErrorArray.add("Line"+(15)+": Missing semicolon.");


        ArrayList actualResult = classUnderTest1.returnError(path);
        assertLinesMatch(manyErrorArray,actualResult);
    }
    @Test void testInReturnErrorEmptyFile() {
        Path path = Paths.get("C:\\Users\\Willson\\401\\java-fundamentals\\linter\\app\\src\\test\\resources\\emptyFile.js");
        App classUnderTest = new App();
        ArrayList<String> emptyArray = new ArrayList<String>();
        ArrayList actualResult = classUnderTest.returnError(path);
        assertLinesMatch(emptyArray,actualResult);
    }

}